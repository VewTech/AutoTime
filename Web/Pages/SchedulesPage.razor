@using Library.Schemas

@page "/schedules"

<h3>Horarios</h3>

<ul>
    @foreach(var currentSchedule in Schedules)
    {
        <li>@currentSchedule.Name<button @onclick="(() => OnScheduleNavigated(currentSchedule))">VER</button></li>
    }
</ul>

<EditForm
    Model="_newSchedule"
    OnValidSubmit="OnCreateNewScheduleButtonClicked">
    
    <label for="scheduleName">Nombre de nuevo horario: </label>
    <InputText @bind-Value="_newSchedule.Name" />

    <br />

    <input type="submit" value="CREAR NUEVO"/>

    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

</EditForm>

@code {
    // Name of the schedule to be created
    private Schedule _newSchedule = new();

    // List of schedules in the user data
    private List<Schedule> Schedules { get; set; } = new();

    // When the page loads
    protected override async void OnInitialized()
    {
        await LoadSchedules();
    }

    // Load schedules that are saved in storage
    private async Task LoadSchedules()
    {
        Schedules = await LocalStorage.GetSchedules();
        StateHasChanged();
    }

    // When the user attempts to create a schedule
    private async void OnCreateNewScheduleButtonClicked()
    {
        await LocalStorage.AddSchedule(_newSchedule);
        await LoadSchedules();
    }

    // When the user attempts to navigate to a schedule details page
    private void OnScheduleNavigated(Schedule schedule)
    {
        Navigation.NavigateTo($"schedules/{schedule.IdSchedule}");
    }
}
